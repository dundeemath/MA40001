{"title":"Python code development","markdown":{"yaml":{"title":"Python code development","format":{"html":{"code-fold":true},"pdf":{"code-fold":true}},"jupyter":"python3"},"headingText":"Introduction","containsRefs":false,"markdown":"\n\n\nIt is strongly encouraged that you use and develop programs over the course of your project. You should discuss programming with your project supervisor. In this section we will develop Python codes to solve a number of example problems.\n\nThe focus of the examples:\n - developing programming skills for problem solving\n - writing your own programmes\n - using existing packages\n\n It is usually a very useful exercise to try to implement your own version of an algorithm. However, in many cases there already exist  well developed codes that we of course should use!\n\n\nYou can use Python via Apps Anywhere (Open Anaconda and then use the SPyder IDE).\n\nAlternatively, you can run Python codes via your Quarto document. On the Uni machines Quarto has been connected to an installation of Python. \n\nTo run python via Quarto create a python environment\n\n``` markdown \n\nInsert syntax for running python.\n\n```\n\n\n## Some key ideas\n\n\n### Calculator\n\n### Variables and datatypes\n\nStrings\nLists\nTuples\nSets\nDictionaries\n\n```{python}\n\n# Define an integer\n\na=8\n\n# Define a floating point number\n\nb=16.25\n\n#\n\ns='Arsenal FC'\n\nprint(type(a))\nprint(type(b))\nprint(type(s))\n\nboolean_variable_1=True\nboolean_variable_2=False\n\nboolean_variable_and=boolean_variable_1*boolean_variable_2\n\nassert(boolean_variable_and==False)\n\n## addition\n\n## substraction\n\n# multiplication\n\n\n## exponential\n\n```\n\n\n### Lists and dictionaries\n\n```{python}\n\nmy_list=[1,2,3,4,5]\n\nprint(my_list)\n\nprint('The second entry in the list is')\nprint(my_list[1])\n```\n\n\n### Logical statements and control loops\n\n\n### Writing functions\n\nA good rule of thumb is that if you find yourself using the same piece of code three or more times you should write a function. This avoids duplication of code.\n\nSuppose we find ourselves manually computing the sum of positive integers many times, i.e.\n$$ \ns_2=0+1+2=3\n$$\nand\n$$ \ns_3=0+1+2+3=6.\n$$\n\nIt makes sense to write a function that computes the sum for arbitrary $n$. Then we call that function when needed.\n\n\n\n```{python}\n\n# Define a function\ndef sum_integers(n):\n  sum_int=0\n  for i in range(n):\n    sum_int=sum_int+i\n  return sum_int\n\n# The old way might eb to manually write out the sum\ns_1=0+1\ns_2=0+1+2\ns_3=0+1+2+3\n\n\n# instead we call a function \n\ns_function_3=sum_integers(3)\nprint(s_function_3)\n\ns_function_120=sum_integers(120)\nprint(s_function_120)\n\n\n\n```\n\n\n\n### Code debugging\n\n* syntax errors\n* runtime errors\n* logic errors\n\n``` python\n\nsum=0.0\nfor i in range(5)\n  sum=sum+i\n\n```\n\n``` python\n\nfor i in range(5):\n  sum=sum+i\n\n```\n\n####\nPlan your code\nKeep code clean (e.g. use variables, write expressiosn that are easy to interpret)\nTest code often\nComment code\n\n#### interpreting error messages\n\n#### print to screen\n\n#### check datatypes\n\n#### check syntax of function call\n\n#### Debugger\n\n\n\n## Python libraries\n\n### Essential \n\n#### Matrix computation (numpy)\n\n[Numpy](https://numpy.org) is a widely used Python libary. It is a standard way to use arrays in Python. Numpy also contains lots of algorithm (e.g. linear algebra, calculus, mathematical functions, integration, random number generation etc.). You can find a beginner's guide [here](https://numpy.org/doc/stable/user/absolute_beginners.html).\n\n\nNumpy provides tools for calculating many mathematical operations.\n\n```{python}\nimport numpy as np\n\nx=3.14\ny=np.sin(x)\n\n\nprint('sin (3.14) is: ' )\nprint(y)\n\nassert(np.abs(y)<0.1)\n\nz=np.pi\np=np.sin(z)\n\nassert(np.abs(p)<0.00001)\n\nprint(p)\n\n```\n\n\nWe can also use numpy to define and manipulate arrays. In the example below we use python lists to define two 1D arrays. \n\n\n\n``` {python}\nimport numpy as np\n\n# Define a numpy array\na = np.array([1, 2, 3, 4, 5, 6])\nb=np.array([7,8,9,10,11,12])\nprint(a)\n\nc=a+b\nprint('The sum of a and b is:')\nprint(c)\n\nprint(\"The first entry in a is\")\na[0]\n```\n\n\n\n\nWe can also use numpy for higher dimensional arrays\n\nCalculate the determinant of the 2x2 matrix\n$$\nA=\\begin{pmatrix}\n4 & 3 \\\\\n2 & 1\n\\end{pmatrix}.\n$$\n\n\n```{python}\nimport numpy as np\n\n# generate a two by two matrix of zeros\nA=np.zeros((2,2))\n\n# Set values as per questions\n\nA[0,0]=4\nA[0,1]=3\nA[1,0]=2\nA[1,1]=1\n\n# Print A out to check it is correct\nprint('The matrix is:')\nprint(A)\n\n# Compute the determinant\ndeterminant=np.linalg.det(A)\n\nprint('The determinant is:')\nprint(determinant)\n\n\n# Formally check that the answer is correct.\nassert(determinant==-2.0)\n\n\n\n```\n\n1. Compute the trace of the matrix $A$.\n2. Compute the determinant of the $3 \\times 3$ matrix\n$$\nB=\\begin{pmatrix}\n4 & 3& 2 \\\\\n2 & 1 & 4 \\\\\n3 & 2 & 1\n\\end{pmatrix}.\n$$\n3. Compute the eigenvalues of $B$.\n\n\n#### Plotting (matplotlib)\n\n[Matplotlib](https://matplotlib.org/stable/users/explain/quick_start.html#a-simple-example) is a pyton library for plotting.\n\n\n\nLet's plot some well-known functions.\n\nSuppose we wish to plot the function\n$$\nf(x)=x^2, \\ \\ x \\in[0,2].\n$$\n\n```{python}\n#import python libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\n# define x\nx=np.linspace(0,2,200)\n\n# Now define the funciton of x\n\nf=x**2\n\n# Now plot the function\n\n# Generate a figure ane an axis\nfig,ax=plt.subplots()\n\n# call the plot function to plot the data\nax.plot(x,f)\n\n# Set the x and y labels\nax.set_xlabel('$x$')\nax.set_ylabel('$f(x)$')\n```\n\nExercises:\n\n 1. Change the domain to $$x\\in[0,4]$$.\n 2. Plot the function $$f(x)=\\sin(x) $$.\n 3. Create two subplots.\n 4. Make the font on the labels larger\n 5. Add a legend to the figures.\n\n\n#### Symbolic computation in Python (sympy)\n\n\n###  Python libraries of interest to particular projects\n\n\n### Numerically solving differential equations (sci-py)\n \n#### ODEs\n\n#### PDEs\n\n### Optimisation (skikit-learn)\n\n### Data analysis (pandas)\n\n### Machine learning (tensorflow)\n\n### Image analysis (skikit-image)\n\n\n## Writing your own scripts\n\nAt some point (either over the course of your project or later) you will likely encounter a  problem that cannot be solved using existing code libraries, i.e. you will need to write your own progammes. To prepare for this day, it is a good idea to practice your code development skills on problems where the solution are already known.\nOver the course of project assessment you will be asked about the methods that you have used in your project. It is much easier to defend the use of a method if you have a clear idea how to programme it; then the limitations of a method become much clearer. You can also include this code in appendix in your written report.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","srcMarkdownNoYaml":"\n\n\n## Introduction\nIt is strongly encouraged that you use and develop programs over the course of your project. You should discuss programming with your project supervisor. In this section we will develop Python codes to solve a number of example problems.\n\nThe focus of the examples:\n - developing programming skills for problem solving\n - writing your own programmes\n - using existing packages\n\n It is usually a very useful exercise to try to implement your own version of an algorithm. However, in many cases there already exist  well developed codes that we of course should use!\n\n\nYou can use Python via Apps Anywhere (Open Anaconda and then use the SPyder IDE).\n\nAlternatively, you can run Python codes via your Quarto document. On the Uni machines Quarto has been connected to an installation of Python. \n\nTo run python via Quarto create a python environment\n\n``` markdown \n\nInsert syntax for running python.\n\n```\n\n\n## Some key ideas\n\n\n### Calculator\n\n### Variables and datatypes\n\nStrings\nLists\nTuples\nSets\nDictionaries\n\n```{python}\n\n# Define an integer\n\na=8\n\n# Define a floating point number\n\nb=16.25\n\n#\n\ns='Arsenal FC'\n\nprint(type(a))\nprint(type(b))\nprint(type(s))\n\nboolean_variable_1=True\nboolean_variable_2=False\n\nboolean_variable_and=boolean_variable_1*boolean_variable_2\n\nassert(boolean_variable_and==False)\n\n## addition\n\n## substraction\n\n# multiplication\n\n\n## exponential\n\n```\n\n\n### Lists and dictionaries\n\n```{python}\n\nmy_list=[1,2,3,4,5]\n\nprint(my_list)\n\nprint('The second entry in the list is')\nprint(my_list[1])\n```\n\n\n### Logical statements and control loops\n\n\n### Writing functions\n\nA good rule of thumb is that if you find yourself using the same piece of code three or more times you should write a function. This avoids duplication of code.\n\nSuppose we find ourselves manually computing the sum of positive integers many times, i.e.\n$$ \ns_2=0+1+2=3\n$$\nand\n$$ \ns_3=0+1+2+3=6.\n$$\n\nIt makes sense to write a function that computes the sum for arbitrary $n$. Then we call that function when needed.\n\n\n\n```{python}\n\n# Define a function\ndef sum_integers(n):\n  sum_int=0\n  for i in range(n):\n    sum_int=sum_int+i\n  return sum_int\n\n# The old way might eb to manually write out the sum\ns_1=0+1\ns_2=0+1+2\ns_3=0+1+2+3\n\n\n# instead we call a function \n\ns_function_3=sum_integers(3)\nprint(s_function_3)\n\ns_function_120=sum_integers(120)\nprint(s_function_120)\n\n\n\n```\n\n\n\n### Code debugging\n\n* syntax errors\n* runtime errors\n* logic errors\n\n``` python\n\nsum=0.0\nfor i in range(5)\n  sum=sum+i\n\n```\n\n``` python\n\nfor i in range(5):\n  sum=sum+i\n\n```\n\n####\nPlan your code\nKeep code clean (e.g. use variables, write expressiosn that are easy to interpret)\nTest code often\nComment code\n\n#### interpreting error messages\n\n#### print to screen\n\n#### check datatypes\n\n#### check syntax of function call\n\n#### Debugger\n\n\n\n## Python libraries\n\n### Essential \n\n#### Matrix computation (numpy)\n\n[Numpy](https://numpy.org) is a widely used Python libary. It is a standard way to use arrays in Python. Numpy also contains lots of algorithm (e.g. linear algebra, calculus, mathematical functions, integration, random number generation etc.). You can find a beginner's guide [here](https://numpy.org/doc/stable/user/absolute_beginners.html).\n\n\nNumpy provides tools for calculating many mathematical operations.\n\n```{python}\nimport numpy as np\n\nx=3.14\ny=np.sin(x)\n\n\nprint('sin (3.14) is: ' )\nprint(y)\n\nassert(np.abs(y)<0.1)\n\nz=np.pi\np=np.sin(z)\n\nassert(np.abs(p)<0.00001)\n\nprint(p)\n\n```\n\n\nWe can also use numpy to define and manipulate arrays. In the example below we use python lists to define two 1D arrays. \n\n\n\n``` {python}\nimport numpy as np\n\n# Define a numpy array\na = np.array([1, 2, 3, 4, 5, 6])\nb=np.array([7,8,9,10,11,12])\nprint(a)\n\nc=a+b\nprint('The sum of a and b is:')\nprint(c)\n\nprint(\"The first entry in a is\")\na[0]\n```\n\n\n\n\nWe can also use numpy for higher dimensional arrays\n\nCalculate the determinant of the 2x2 matrix\n$$\nA=\\begin{pmatrix}\n4 & 3 \\\\\n2 & 1\n\\end{pmatrix}.\n$$\n\n\n```{python}\nimport numpy as np\n\n# generate a two by two matrix of zeros\nA=np.zeros((2,2))\n\n# Set values as per questions\n\nA[0,0]=4\nA[0,1]=3\nA[1,0]=2\nA[1,1]=1\n\n# Print A out to check it is correct\nprint('The matrix is:')\nprint(A)\n\n# Compute the determinant\ndeterminant=np.linalg.det(A)\n\nprint('The determinant is:')\nprint(determinant)\n\n\n# Formally check that the answer is correct.\nassert(determinant==-2.0)\n\n\n\n```\n\n1. Compute the trace of the matrix $A$.\n2. Compute the determinant of the $3 \\times 3$ matrix\n$$\nB=\\begin{pmatrix}\n4 & 3& 2 \\\\\n2 & 1 & 4 \\\\\n3 & 2 & 1\n\\end{pmatrix}.\n$$\n3. Compute the eigenvalues of $B$.\n\n\n#### Plotting (matplotlib)\n\n[Matplotlib](https://matplotlib.org/stable/users/explain/quick_start.html#a-simple-example) is a pyton library for plotting.\n\n\n\nLet's plot some well-known functions.\n\nSuppose we wish to plot the function\n$$\nf(x)=x^2, \\ \\ x \\in[0,2].\n$$\n\n```{python}\n#import python libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\n# define x\nx=np.linspace(0,2,200)\n\n# Now define the funciton of x\n\nf=x**2\n\n# Now plot the function\n\n# Generate a figure ane an axis\nfig,ax=plt.subplots()\n\n# call the plot function to plot the data\nax.plot(x,f)\n\n# Set the x and y labels\nax.set_xlabel('$x$')\nax.set_ylabel('$f(x)$')\n```\n\nExercises:\n\n 1. Change the domain to $$x\\in[0,4]$$.\n 2. Plot the function $$f(x)=\\sin(x) $$.\n 3. Create two subplots.\n 4. Make the font on the labels larger\n 5. Add a legend to the figures.\n\n\n#### Symbolic computation in Python (sympy)\n\n\n###  Python libraries of interest to particular projects\n\n\n### Numerically solving differential equations (sci-py)\n \n#### ODEs\n\n#### PDEs\n\n### Optimisation (skikit-learn)\n\n### Data analysis (pandas)\n\n### Machine learning (tensorflow)\n\n### Image analysis (skikit-image)\n\n\n## Writing your own scripts\n\nAt some point (either over the course of your project or later) you will likely encounter a  problem that cannot be solved using existing code libraries, i.e. you will need to write your own progammes. To prepare for this day, it is a good idea to practice your code development skills on problems where the solution are already known.\nOver the course of project assessment you will be asked about the methods that you have used in your project. It is much easier to defend the use of a method if you have a clear idea how to programme it; then the limitations of a method become much clearer. You can also include this code in appendix in your written report.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"Python.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.5.56","theme":"cosmo","title":"Python code development","jupyter":"python3"},"extensions":{"book":{"multiFile":true}}},"pdf":{"identifier":{"display-name":"PDF","target-format":"pdf","base-format":"pdf"},"execute":{"fig-width":5.5,"fig-height":3.5,"fig-format":"pdf","fig-dpi":300,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":false,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"jupyter"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"pdf","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":true,"code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":true,"merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"pdf-engine":"xelatex","standalone":true,"variables":{"graphics":true,"tables":true},"default-image-extension":"pdf","to":"pdf","include-in-header":[{"text":"\\usepackage{chemarr}\n\\usepackage{lipsum}\n\\usepackage{tikz}\n\\AtBeginDocument{\\thispagestyle{empty}\n\\begin{tikzpicture}[remember picture,overlay]\n\\node at (current page.center) {\\includegraphics[width=\\paperwidth,height=\\paperheight,keepaspectratio]{MA32009Cover.png}};\n\\end{tikzpicture}\\clearpage}\n"}],"output-file":"Python.pdf"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"block-headings":true,"documentclass":"scrreprt","title":"Python code development","jupyter":"python3"},"extensions":{"book":{"selfContainedOutput":true}}}},"projectFormats":["html","pdf"]}