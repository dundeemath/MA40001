[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "MA40001",
    "section": "",
    "text": "Preface\nWelcome to the module MA40001.\nMy name is Philip Murray and I am the module lead.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#how-to-contact-me",
    "href": "index.html#how-to-contact-me",
    "title": "MA40001",
    "section": "How to contact me?",
    "text": "How to contact me?\n\nemail: pmurray@dundee.ac.uk\noffice: G11, Fulton Building\nTeams: PM me",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#software",
    "href": "index.html#software",
    "title": "MA40001",
    "section": "Software",
    "text": "Software\nThe taught component of the module will require you to use the following software:\n\nQuarto\nVisual Studio Code\nGithub\nlatex\nPython\n\n\n\n\n\n\n\nWhy bother with all this?\n\n\n\nThe aim is to provide you with open-source tools that enable you to generate modern scientific/mathematical documents.\n\n\n\nUni machines\nFrom Apps Anywhere, open:\n\nVisual Studio Code 1.92.2 with Quarto 1.5.56\n\n\n\nOn your own machine\nInstall\n\nQuarto\nVS Code\nPython + libraries (matplotlib.pyplot, numpy,)\n\nWithin Quarto:\n\ninstall the quarto extension for VS Code\ninstall Latex (follow Quarto instruction for generating a pdf).\nConfigure the Python interpreter (Show and Run Commands-&gt;Python Select Interpreter)",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#content",
    "href": "index.html#content",
    "title": "MA40001",
    "section": "Content",
    "text": "Content\n\nLecture notes\nYou can find lecture notes for the module on this page. If you would like a pdf this can be easily generated by clicking on the pdf link of the webpage. I will occasionally edit/update the notes as we proceed through lectures. If you spot any errors, typos or omissions please Raise an Issue\n\n\nTemplate codes\nI have provided template codes via the github page dundeemath/MA40001resources.\nWe are using github classroom. Hence you you each have a private github repository (which only I can see the content of).\nThe idea is that you pull documents from github, edit them as necessary and push the edited documents back to github.",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#python-codes",
    "href": "index.html#python-codes",
    "title": "MA40001",
    "section": "Python codes",
    "text": "Python codes\nI have provided Python codes for most of the figures in the notes (you can unfold code section by clicking `Code’). Note that the Python code does not appear in the pdf.\nMany of you have taken the Introduction to Programming module at Level 2 and have therefore some experience using Python. I strongly encourage you to use the provided codes as a tool to play around with numerical solutions of the various models that we will be working on. The codes should run as standalone Python codes (e.g. Paste into Anaconda-&gt;Spyder).",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#assessment",
    "href": "index.html#assessment",
    "title": "MA40001",
    "section": "Assessment",
    "text": "Assessment\n\nPresentation\nInterim report\nPoster\nFinal report\nViva",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "index.html#plan",
    "href": "index.html#plan",
    "title": "MA40001",
    "section": "Plan",
    "text": "Plan\n\nModule organisation\n\n\nWeek\nMaterial\nAssessment\n\n\n\n\n\n1-3\nQuarto\nFormative\n\n\n\n4-6\nPython\nFormative\n\n\n\n7-10\nPresentation practices\nFormative\n\n\n\n11\nAssessed presentation\nSummative",
    "crumbs": [
      "Preface"
    ]
  },
  {
    "objectID": "WritingAReport.html",
    "href": "WritingAReport.html",
    "title": "1  Scientific/mathematical writing",
    "section": "",
    "text": "1.1 Common elements across different assessment points",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Scientific/mathematical writing</span>"
    ]
  },
  {
    "objectID": "WritingAReport.html#common-elements-across-different-assessment-points",
    "href": "WritingAReport.html#common-elements-across-different-assessment-points",
    "title": "1  Scientific/mathematical writing",
    "section": "",
    "text": "1.1.1 Narrative\nA common theme with the different assessment points is the need for a narrative around your project:\n\ncan you describe the project in one succinct sentence?\ncan you outline why the topic is important?\nwhat is the background to the project?\nwhat methods/results/techniques have you developed?\ncan you summarise your findings?\n\nOnce you have settled on a narrative, the different assessment points can be thought of as variations on the presentation of your project narrative.\n\n\n1.1.2 Pitching the content appropriately\nThe first in principle in good communication is to know your audience.\nIf you pitch at too high a level (e.g. assuming that your audience know more than they actually do), the audience will likely be unable to follow your reasoning.\nIf you pitch at too low a level (e.g. by explaining concepts that your audience is already familiar with) they will likely be bored/feel condescended etc.\nAt all points of your assessment: assume that you are communicating with your class mates, i.e. Level 4/5 of a undergraduate mathematics degree. This means that you should not assume that the audience has specific knowledge of the details/background of your project.\n\n\n1.1.3 Equations\nAre equations presented accurately? Are mathematical objects accurately defined? Has sufficient background detail been presented so that the arguments can be reasonably followed?\n\n1.1.3.1 Typesetting equations\nTo typeset formulae is actually quite difficult. Mathematics uses a variety of symbols and several different alphabets: Roman, Greek, Hebrew are the most common. In addition formulae are often more similar to graphics than to text. There are numerators and denominators which in turn can have fractions etc., e.g.: \\[\nf:= \\frac{1}{1+\\frac{1}{1+\\frac{1}{1+x}}}.\n\\]\nTo make this formula look good requires either an advanced typesetting program or a lot of effort. Most common typesetting programmes come with some sort of equation editor, but very few can handle such a problem. The most powerful mathematical typesetting program, which is also the format used for almost all mathematical literature is LaTeX. We will learn about LaTeX later.\nAs with grammar, for a language there exist also certain conventions about how to write formulae. Here is a (far from exhaustive) list of the most import conventions:\n\nTreat the formula like text. If the formula is at the end of a sentence there has to be a full stop at the end of the formula. If another formula follows use a comma or semicolon. This is how we count \\[\n1 + 0 = 1,\n1 + 1 = 2.\n\\]\nuse Roman (typically lower case) letters in italic style for all variables: \\(x\\), \\(y\\), \\(z\\), \\(a\\), \\(b\\), \\(c\\), both if we refer to them in the text as well as in formulae. Note difference between \\(x\\) and x.\nuse Greek letters for angles, and e.g. differential forms;\ntypeset vectors in bold, \\(\\mathbf{a}\\), or using an arrow, \\(\\overrightarrow{a}\\);\ntypeset functions in roman, \\(\\sin(x)\\) rather than \\(sin(x)\\);\ntypeset matrices using capital roman letters, e.g. \\(M\\);\nrepresent number systems and also certain vector spaces in a style where certain lines are double: \\(\\mathbb{R}\\), \\(\\mathbb{Q}\\), \\(\\mathbb{C}\\), …;\nuse curly brackets for sets, e.g. \\(\\{1, 2, 3\\} = \\{2, 1, 3\\}\\), and regular brackets for an ordered list \\((1, 2, 3) \\neq (2, 1, 3)\\);\ndenote a range by three dots: \\(i = 1, 2, . . . , n,\\) (no bracket required);\nuse brackets only where necessary, note that multiplication/division takes precedence over addition/subtraction; e.g \\[\na + (b · c)\n\\] does not need the brackets, but \\[\n(a + b) · c\n\\] does. Any fraction replaces a bracket, so \\(\\frac{5}{a+b}\\) does not need the brackets.\nuse a separate line for any formula that uses more than one line or complicated formula. Don’t write \\(x=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}\\) in line. Instead write \\[\nx=\\frac{-b\\pm\\sqrt{b^2-4ac}}{2a}.\n\\]\n\n\n\n\n\n\n\nCommon mistakes\n\n\n\nCommon mistakes are (in addition to violating the above conventions):\n\nthere are typos/inconsistencies in the equations\nthe presented system is not mathematically self-consistent (e.g. a system of ODEs is missing initial conditions)\nvariables/parameters are not defined\nusing different font styles and sizes to represent the same quantity;\nnot using the same symbol (or font) in the text and separate formulae;\nnot using spaces between symbols, and/or wrong symbols, e.g \\(axb\\) instead of \\(a \\times b\\);\nforgetting brackets or placing too many brackets.\n\n\n\n\n\n\n1.1.4 Figures\nA formula is often the best and most concise way to communicate a relation or function to a mathematically trained audience. However, there are many cases where even a mathematician might have difficulty understanding (e.g. in the short time available in a presentation) what a function represents. For functions of one and two variables there is always the option to show a plot of the function. Here is an example of a function in two variables: \\[\nf (x, y) = \\cos(x) \\sin(xy).\n\\tag{1.1}\\] Although this is a comparatively simple function it takes some time to figure out what properties the function has, that is for instance:\n\nIs the function periodic?\nHow many maxima/minima does it have?\nHow does it behave for \\(x, y \\rightarrow \\infty\\)?\n\nTo explain the behaviour of such a function, a plot will help! But which plot? For example, we could use a surface or contour plot (see Figure 1.1). The advantage of a contour plot is that it is often easier to see the locations of maxima and minima but it is not so easy to see how high the extrema are.\n\n\n\n\n\n\nConnecting figures to text\n\n\n\nNote that all plots should be cross referenced in the text, i.e. we should never have figures that are not referenceed somewhere in the text.\nA good rule of thumb is: if figures and tables are removed from the text, does the text still read coherently? i.e. the figure is helping the reader to understant a point that is made in the text. It is not replacing the need for text.\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx=np.linspace(-3.0,3.0,100)\ny=np.linspace(-3.0,3.0,100)\n\n[x_mesh,y_mesh]=np.meshgrid(x,y)\n\nz=np.cos(x_mesh)*np.sin(x_mesh*y_mesh)\n\nfig, ax = plt.subplots(subplot_kw={\"projection\": \"3d\"})\nax.plot_surface(x_mesh,y_mesh,z)\n\nax.set_xlabel('$x$')\nax.set_ylabel('$y$')\nax.set_zlabel('$f(x,y)$')\n\nfig2, ax2 = plt.subplots()\nax2.contour(x_mesh,y_mesh,z)\n\nax2.set_xlabel('$x$')\nax2.set_ylabel('$y$')\nplt.show()\n\n\n\n\n\n\n\n\n\n\n(a) 3D plot of Equation 1.1\n\n\n\n\n\n\n\n\n\n\n\n(b)\n\n\n\n\n\n\nFigure 1.1\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nx=np.array([4,10,5,2,1])\n\n\nfig, ax = plt.subplots()\nax.bar([0,1,2,3,4],x)\n\nax.set_xlabel('$x$')\n\nplt.show()\n\n\n\n\n\n\n\nFigure 1.2: A bar chart.\n\n\n\n\n\n\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nlabels = 'Paw patrol', 'JJ and Mikey', 'Pokemon', 'Octonauts'\nsizes = [15, 30, 45, 10]\n\nfig, ax = plt.subplots()\nax.pie(sizes, labels=labels)\n\nplt.show()\n\n\n\n\n\n\n\nFigure 1.3: A pie chart.\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Fixing random state for reproducibility\nnp.random.seed(19680801)\n\n\nN = 50\nx = np.random.rand(N)\ny = 3*x+np.random.rand(N)\n\nfig,ax=plt.subplots()\nax.scatter(x, y, alpha=0.5)\nax.set_xlabel('$x$')\nax.set_ylabel('$y$')\n\nplt.show()\n\n\n\n\n\n\n\nFigure 1.4: A scatter plot.\n\n\n\n\n\n\nimport matplotlib.pyplot as plt\nimport numpy as np\n\n# Fixing random state for reproducibility\n\n\n\nx = np.linspace(0,5,10)\ny = 3*np.sin(x)+1.0+0.05*np.random.rand(len(x))\n\n\nfig,ax=plt.subplots()\nax.plot(x, y,'-x')\nax.set_xlabel('$x$')\nax.set_ylabel('$y$')\n\nplt.show()\n\n\n\n\n\n\n\nFigure 1.5: \\(y\\) is plotted against x.\n\n\n\n\n\nOther types of plots are useful for different purposes:\n\nbar chart (Figure 1.2)\npie chart (Figure 1.3)\nscatter plot (Figure 1.4)\nline chart (Figure 1.5).\n\n\n\n\n\n\n\ncommon mistakes\n\n\n\n\nhanging figures (i.e. figures that not placed in context (e.g. connected to the text))\nfigures without axis labels\ncoloured graphs without colour scale/legend\nlabels/ tick marks are too small\ntype of graph unsuitable for the data shown\nthe figure was not adequately connected to the text (it is not clear, for example, what equations were solved, what method was used.)\n\n\n\nSome rules -of-thumb:\n\ncheck that any text in axis labels/legends is approximately the same size as font in the main text\n\n\n\n1.1.5 Schematic diagrams\nSchematic diagrams are a useful way to help to try and introduce a new concept/summarise a finding.\nThere are many ways to generate schematic diagrams (e.g. generating in software such as Photoshop or Illustrator and saving as an image).\nAlternatively Quarto provides an itnerface to a number of graph tools that generate schematic diagrams, e.g. \n\n\n\n\n\nflowchart LR\n  A[Hard edge] --&gt; B(Round edge)\n  B --&gt; C{Decision}\n  C --&gt; D[Result one]\n  C --&gt; E[Result two]\n\n\n\n\n\n\n\n\n1.1.6 References\nAll text in your report must be either original or attributed to the originating author(s). A word-for-word quotation should be indicated with quotation symbols. Such as: The whatever effect causes “extremely aggressive phenotypes” to dominate (Smith et al. 2010). Extensive quotes of more than one sentence should generally be set apart as a separate paragraph: According to Tolkien (1954):\n“ One Ring to rule them all, One Ring to find them, One Ring to bring them all and in the darkness bind them. ”\nIt is generally best to limit quotations to no more than 1-3 sentences. Instead, one should paraphrase and/or summarise cited work. Moreover, the majority of the content of a report should be in the authors original words. It should be the authors original logical argument, with citations used to document and justify key assertions and facts. Hence, quotations should be kept to a minimum.\nStudents must take great care when quoting or paraphrasing text to cite the original source. To do otherwise is plagiarism, which undermines the integrity of science, and has serious consequences for the authors as well. (e.g., failing grades, expulsion from a degree program, loss of an academic position, being shunned by the scientific community, etc.)\n\n\n\n\n\n\nUniversity of Dundee definition of plagiarism\n\n\n\nPlagiarism is the unacknowledged use of another’s work as if it were one’s own. Examples are:\n\nthe inclusion of more than a single phrase from another’s work without the use of quotation marks and acknowledgement of the source;\nsummarising another’s work by changing a few words or altering the order of presentation without acknowledgement;\ncopying another’s work;\nthe use of another’s ideas without acknowledgement.\n\nNB: if you wish to reference your own work, it is important to acknowledge yourself as the source and provide the appropriate reference.\n\n\nWikipedia is an excellent resource for learning new topics. However, it is not an acceptable source for citation in a report or publication for various reasons: * the content of wikipedia changes continuously and what we refer to today might not be there tomorrow. , * it is generally not written by experts and often contains errors.\nInstead you should try and try and cite primary sources (e.g. research papers or textbooks) as these have permanent bibliographic identifiers (dois).",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Scientific/mathematical writing</span>"
    ]
  },
  {
    "objectID": "WritingAReport.html#written-reports",
    "href": "WritingAReport.html#written-reports",
    "title": "1  Scientific/mathematical writing",
    "section": "1.2 Written reports",
    "text": "1.2 Written reports\nThe overall structure of a report is (generally) as follows:\n\nTitle page: This should give the title of the report, the author list, and the date.\nAbstract: provide a short synopsis (~10 sentence) of the project.\nIntroduction: This introduces the overall context and importance of the problem you are addressing. It should give:\n\nA basic paragraph or two on background of the problem, its significance, and motivation for the paper. It should make us want to continue reading.\nIn a research-grade paper, you would include information as to why preceding work by others has been insufficient. What work, findings, or improved methodology are required?\nA summary of any hypotheses that you will develop and justify throughout the paper\nA basic outline of the remainder of the paper, including a note on the methodology (in mathematics, these would be your modelling, analytical, and numerical techniques).\n\nActual content: There should be one or more sections that logically progress your argument and analysis. For example:\n\nFormulation of the problem\nMethods used to solve the problem\nResults\n\nDiscussion and Conclusions: Wrap up with a summary of your major results, the significance of your conclusions (including any additional analysis of the results to lay out this significance), and an outlook what else could be done/ or where improvements are required.\n\n\n\n\n\n\n\nSome common errors in the stucture\n\n\n\n\nInsufficient development of background (the author assumes that the reader knows more than they do)\nThe aims of the project are not clearly stated\nThe importance of the topic is insufficiently described (e.g. why study this problem?)\nthe discussion is too short\n\n\n\n\nReferences: This section contains the full list of publications that you cited in your report.\nAppendices (optional): Lengthy and/or tedious calculations or details that are too distracting to the overall flow of your paper, and yet are necessary to fully document your work, should be placed in appendices. You must also provide evidence for any codes that you have developed.\n\nA template project report is available via the MA40001Resources github repository.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Scientific/mathematical writing</span>"
    ]
  },
  {
    "objectID": "WritingAReport.html#verbal-presentation",
    "href": "WritingAReport.html#verbal-presentation",
    "title": "1  Scientific/mathematical writing",
    "section": "1.3 Verbal presentation",
    "text": "1.3 Verbal presentation\nA template presentation is available via the MA40001Resources github repository.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Scientific/mathematical writing</span>"
    ]
  },
  {
    "objectID": "VersionControl.html",
    "href": "VersionControl.html",
    "title": "2  File management",
    "section": "",
    "text": "2.1\nGithub is a developer platform that allows developers to create, store, manage and share their code. It is version-controlled, meaning that once you push files to the github cloud, you will have access to it and all previously pushed version of that file.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "VersionControl.html#section",
    "href": "VersionControl.html#section",
    "title": "2  File management",
    "section": "",
    "text": "Github is used across academia and industry.\nIt provides you with a back-up for your project.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "VersionControl.html#github-classroom",
    "href": "VersionControl.html#github-classroom",
    "title": "2  File management",
    "section": "2.2 Github classroom",
    "text": "2.2 Github classroom\n\nFind the Github Desktop app on Apps Anywhere.\nYou will need to create a github account if you do not currently have one.\nDownload the MA4000Resources repository using the provided link.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "VersionControl.html#edit-an-existing-file-and-push-the-modified-version-to-github",
    "href": "VersionControl.html#edit-an-existing-file-and-push-the-modified-version-to-github",
    "title": "2  File management",
    "section": "2.3 Edit an existing file and push the modified version to github",
    "text": "2.3 Edit an existing file and push the modified version to github\n\nOpen the file *.text\nEdit the text\nCommit the file and push it\nCheck that the version of the file in the cloud has changed to reflect your edit.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "VersionControl.html#create-a-new-file-on-your-local-machine-and-push-it-to-github",
    "href": "VersionControl.html#create-a-new-file-on-your-local-machine-and-push-it-to-github",
    "title": "2  File management",
    "section": "2.4 Create a new file on your local machine and push it to github",
    "text": "2.4 Create a new file on your local machine and push it to github",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "VersionControl.html#revert-to-a-previous-version-of-a-file-using-version-control",
    "href": "VersionControl.html#revert-to-a-previous-version-of-a-file-using-version-control",
    "title": "2  File management",
    "section": "2.5 Revert to a previous version of a file using version control",
    "text": "2.5 Revert to a previous version of a file using version control\nSuppose that you have made a mistake and want to revert to a previous version of a file. - Find the file in the github repository - Look back at previous versions of the the file - Download the copy that you want to revert to",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "VersionControl.html#using-the-command-line-interface",
    "href": "VersionControl.html#using-the-command-line-interface",
    "title": "2  File management",
    "section": "2.6 Using the command line interface",
    "text": "2.6 Using the command line interface\nYou can also do all of the above from the terminal.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>File management</span>"
    ]
  },
  {
    "objectID": "QuartoIntroduction.html",
    "href": "QuartoIntroduction.html",
    "title": "3  Quarto",
    "section": "",
    "text": "3.1 Getting started\nApps Anywhere Visual Studio Code X with Quarto extension-&gt; Launch File-&gt;New File-&gt;Quarto document\nTo compile the document: click preview button in top tight corner",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "QuartoIntroduction.html#a-first-markdown-document",
    "href": "QuartoIntroduction.html#a-first-markdown-document",
    "title": "3  Quarto",
    "section": "3.2 A first markdown document",
    "text": "3.2 A first markdown document\nTo begin with, let’s consider a simple markdown document.\n&lt;!-- Configuration information --&gt;\n---\ntitle: \"Hello, Quarto\"\nformat: html\n---\n\n&lt;!-- Insert content below --&gt;\nThis is a Quarto document.\nAt the top of a file we include a YAML block (enclosed by ---). This provides configuration information for the document.\nTo run this code you should:\n\nOpen VisualStudio Code.\nCreate a new .qmd file and save in a sensible directory.\nCopy and paste the above code into the .qmd file.\n\nCompile the code by clicking the preview on the top right of your VSCode editor.\n\nOR\n\nOpen a terminal, navigate to the directory and type\n\nquarto render\nquarto preview\nHave a look at the contents on the directory. You shoule be able to see that a .html fil has been generated.\n\n\n\n\n\n\n\nQuarto on your personal computer\n\n\n\nOn your personal computer you may need to install Quarto.\nYou can find some guidance on how to do this here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "QuartoIntroduction.html#creating-a-pdf",
    "href": "QuartoIntroduction.html#creating-a-pdf",
    "title": "3  Quarto",
    "section": "3.3 Creating a pdf",
    "text": "3.3 Creating a pdf\nOver the course of your project you will need to submit documents in pdf format. To get Quarto to generate PDF you need to edit the YAML information as follows.\n---\ntitle: \"Hello, Quarto\"\nformat: pdf\n---\n\nThis is a Quarto document\nRepeat the above compiling steps. You should now be able to see that a pdf file has been created.\n\n\n\n\n\n\nNote\n\n\n\nIt is crucial that you can generate a pdf from your Quarto document as your final report will be submitted in pdf format.\nIt is advised to regularly check that a pdf is generated when you render your Quarto document. I have noticed that with some bugs in latex, Quarto can render a document in .html format (it looks ok in preview) but be unable to generate a pdf.\n\n\n\n\n\n\n\n\nLAtex on your personal computer\n\n\n\nTo generate a pdf, your computer must have a version of latex installed. In the Uni machines this has been set up for you. On your personal machines you may need to install latex and configure Quarto.\nYou can find guidance on how to do this here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "QuartoIntroduction.html#adding-structure-to-your-quarto-documents",
    "href": "QuartoIntroduction.html#adding-structure-to-your-quarto-documents",
    "title": "3  Quarto",
    "section": "3.4 Adding structure to your Quarto documents",
    "text": "3.4 Adding structure to your Quarto documents\nInformation on document structure can be found on the Quarto help pages. Below I will highlight some of the key document structures that you will likely need in your project.\n\n3.4.1 Section headings\nBelow is some Quarto code that will generate a document with Section headings.\n\nCreate a new .qmd file in VS Code\nCopy and paste the code below\nRender the code and check that a .html file has been generated in\nOpen the .html in a browser.\n\n---\ntitle: \" Quarto sections\"\nformat: html\ncode-fold: True\n---\n\n# Main section \nThis is a Quarto document\n\n## Sub section title\nThis is a subsection\n\n### \nThis is a further subsection\n\n#\nThis is a new section\n\n##\n\n\n3.4.2 Tables\nTables can provide a concise way to present information. Typical uses in a report might be to gather information about model parameters or to display data.\nHere is an example of Quarto code to make a table:\n| Parameter | Value | Unit  |\n|---------|:-----|------:|\n| $a$      | 1  |    ms$^{-1}$ |\n| $b$      | 2  |   s$^{-1}$  |\n| $c$        | 3    |     Nondim  |\n\n: Demonstration of  table\nThe rendered version appears as\n\nDemonstration of table\n\n\nParameter\nValue\nUnit\n\n\n\n\n\\(a\\)\n1\nms\\(^{-1}\\)\n\n\n\\(b\\)\n2\ns\\(^{-1}\\)\n\n\n\\(c\\)\n3\nNondim\n\n\n\nYou can find more info. on Quarto tables here.\n\n\n3.4.3 Figures\nTo include an existing figure in a Quarto document then you must firstly store the figure file in a sensible directory. Then you can include the figure (‘DemoFigureMA40001.png’) using the syntax:\n![This is the figure caption.](DemoFigureMA40001.png)\n\n\n\nThis is the figure caption.\n\n\nYou can find more info on Quarto figures here.\n\n\n3.4.4 Cross referencing\nThroughout your document you will need to refer to different objects that you have created (e.g. Tables, Figures, equations, theorems).\nIn Quarto objects are tagged using a specific syntax (prefix for that specific obect + unique tag). See Table 3.1 for some examples. The object is cross referenced using an `@’ tag.\n\n\n\nTable 3.1: A table with syntax for referencing some Quarto objects.\n\n\n\n\n\nObject\nTag\nReference\n\n\n\n\nTable\n{#tbl-mytable}\n@tbl-mytable\n\n\nFigure\n{#fig-myfigure}\n@fig-myfigure\n\n\nEquation\n{#eq-myequation}\n@eq-myequation\n\n\n\n\n\n\nThe table could be cross referenced using a tag {#tbl-parameters} as follows\n| Parameter | Value | Unit  |\n|---------|:-----|------:|\n| $a$      | 1  |    ms$^{-1}$ |\n| $b$      | 2  |   s$^{-1}$  |\n| $c$        | 3    |     Nondim  |\n\n: Demonstration of  table {#tbl-parameters}\nThe tag can now be cross referenced using the tag (see Table 3.2).\n\n\n\nTable 3.2: Demonstration of table\n\n\n\n\n\nParameter\nValue\nUnit\n\n\n\n\n\\(a\\)\n1\nms\\(^{-1}\\)\n\n\n\\(b\\)\n2\ns\\(^{-1}\\)\n\n\n\\(c\\)\n3\nNondim\n\n\n\n\n\n\nIn a similar manner we can cross reference an equation (see tag #eq-emc2). This is cross-referenced using the handle @eq-emc2.\n$$\nE=mc^2\n$$ {#eq-emc2}\nSo if I defined an equation \\[\nE=mc^2,\n\\tag{3.1}\\] I can refer to it in the text via Equation 3.1.\nQuarto allows for definition and cross referencing of a range of mathematical objects (e.g. theorems, corroloraries)\nYou can find out more about cross referencing here.\n\n\n3.4.5 Citations and references\nIn your final report will need to provide a list of references that are cited at relevant points in your document.\nThiscan be achieved relatively straightforwardly in Quarto.\nYou need to create a .bib file (e.g. mybibliography.bib) and save it in a sensible directory (e.g. alongside your .qmd files).\nYou need to populate the .bib file with bibliographic entries, each of which will have a unique tag (e.g. my_bib_tag)\nThen in your .qmd file you can cite a reference using the @' handle (e.g.@my_bib_tag’).\nYou can find out more about citations in Quarto here.\n\n\n\n\n\n\nCreating a .bib file\n\n\n\nYou could use a reference manager such as Mendeley or Jabref.\nAlternatively, you\n\ngo to google scholar.\ngo to settings tab\nIn the Bibliography manager, select -&gt; Show links to import citations into Bibtex\nNow when you search for a paper/textbook in Google scholar, there should be an additional link: ‘import into Bibtex’\nCopy and paste the contents in the link into your .bib file",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "QuartoIntroduction.html#appendices",
    "href": "QuartoIntroduction.html#appendices",
    "title": "3  Quarto",
    "section": "3.5 Appendices",
    "text": "3.5 Appendices\n\n3.5.1 Submitting code\nYou should include codes that you have developed in the appendix of your report. You can do this using a code block.\n\n``` markdown\nCopy and paste code here\n```",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "QuartoIntroduction.html#websites-and-blogs-in-quarto",
    "href": "QuartoIntroduction.html#websites-and-blogs-in-quarto",
    "title": "3  Quarto",
    "section": "3.6 Websites and blogs in Quarto",
    "text": "3.6 Websites and blogs in Quarto\nGiven what you have achieved thus far, it is not a very big step to generate and publish websites, blogs and dashboards.\nThere are some tutorials avilable on how to do this on the Quarto pages.\nFor guidance on publishing material see here.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Quarto</span>"
    ]
  },
  {
    "objectID": "MathematicalTypesetting.html",
    "href": "MathematicalTypesetting.html",
    "title": "4  Typesetting mathematics",
    "section": "",
    "text": "4.1 The math environment in latex\nLatex is a programming language used for mathematical typesetting. In its original form a latex file is compiled to generate a .pdf file. Mathematical notation is written in the ‘math environment’. You can find a detailed introduction to latex here.\nWithin Quarto we can access the latex math environment by enclosing text within dollar symbols.\nTo typeset mathematics inline (e.g. \\(x+y=2\\)) we write …\nTo typeset mathematics in a new line we use double dollar symbols. To obtain the expression \\[\n\\frac{x+y}{2}=4,\n\\] we write\nIt is worth spending some time familiarising yourself with basic latex commands.\nHere is the same equation with a cross reference tag, i.e. \\[\n\\frac{x+y}{2}=4.\n\\tag{4.1}\\]\nNow I can cross reference Equation 4.1.\nThis has been achieved using\nIt is worth knowing how to:",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Typesetting mathematics</span>"
    ]
  },
  {
    "objectID": "MathematicalTypesetting.html#the-math-environment-in-latex",
    "href": "MathematicalTypesetting.html#the-math-environment-in-latex",
    "title": "4  Typesetting mathematics",
    "section": "",
    "text": "To typeset mathematics in line (e.g. $x+y=2$) we write ...\n\n\n$$\n\\frac{x+y}{2}=4.\n$$\n\n\n\n\n$$\n\\frac{x+y}{2}=4.\n$${#eq-myequation}\n\n\nwrite a system of aligned equations \\[\n\\begin{aligned}\n\\sum_1^3 n &=& 1+ 2 + 3 \\nonumber \\\\\n&  = & 6 \\\\\n\\sum_1^4 n &=& 1+2 +3 +4 \\nonumber  \\\\\n& = & 10\n\\end{aligned}\n\\] Note that the equations are aligned such that the equal signs within the ampersands are at the same place;\nUse limits and sums, i.e. \\[\n\\lim_{n \\to \\infty} \\sum_{k=1}^n \\frac{1}{k^2} = \\frac{\\pi^2}{6};\n\\]\ndefine sets of numbers, i.e. \\[\nx^{2} \\geq 0\\qquad \\textrm{for all}x \\in \\mathbb{R}\n\\]\nhave several expressions separated by some space \\[\n\\sqrt{ x^{2}+\\sqrt{y} } \\quad \\overline{m+n} \\quad \\underbrace{ a+b+\\cdots+z }_{26};\n\\]\nwrite a matrix \\[\n\\mathbf{X} =\n\\begin{pmatrix}\nx_{11} & x_{12} & \\ldots \\\\\nx_{21} & x_{22} & \\ldots \\\\\n\\vdots & \\vdots & \\ddots\n\\end{pmatrix};\n\\]\nuse conditional statements \\[\ny = \\left\\{ \\begin{array}{ll}\na, & \\textrm{if $d&gt;c$},\\\\\nb+x, &  \\textrm{in the morning},\\\\\nl, & \\textrm{all day long};\n\\end{array} \\right.\n\\]\nadjust the size of brackets \\[\n\\begin{aligned}\n& &  (4)  \\\\\n& & (\\frac{4}{3}) \\leftarrow \\textrm{this is bad} \\\\\n& & \\left(\\frac{4}{3} \\right)  \\leftarrow \\textrm{much better}\n\\end{aligned}.\n\\]",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Typesetting mathematics</span>"
    ]
  },
  {
    "objectID": "MathematicalTypesetting.html#exercise-an-example-worksheet",
    "href": "MathematicalTypesetting.html#exercise-an-example-worksheet",
    "title": "4  Typesetting mathematics",
    "section": "4.2 Exercise: an example worksheet",
    "text": "4.2 Exercise: an example worksheet\nTry to typeset the questions below in latex:\n\nDenote the roots of the equation \\(x^2+5x+1=0\\) by \\(x_1=\\alpha\\) and \\(x_2=\\beta\\).\n\\[\n\\sin \\left(3\\theta+\\frac{\\pi}{2} \\right)=\\frac{1}{2} \\qquad   0\\le\n\\theta \\leq \\pi .\n\\]\nExpress \\({\\displaystyle \\frac{2x-26}{x^2-2x-8}}\\) in partial fractions.\n\\[\n\\mbox{ (a)}\\; \\sum_{k=1}^{500} (2k-21),\\qquad\n\\mbox{ (b)}\\; \\sum_{k=1}^{20} \\frac{(-2)^k}{5},\\qquad\n\\mbox{ (c)}\\; \\sum_{k=1}^\\infty 5\\left(\\frac{1}{3}\\right)^k.\n\\]\n\\[\n\\int_0^{1/2} x\\sqrt{1-2x}dx.\n\\]\n\\[\n\\frac{\\partial v}{\\partial t}=\\frac{\\partial^2 v}{\\partial x^2}\n+v^2(1-v)\\qquad  x\\in\\mathbb{R}, \\;\\; t&gt;0.\n\\]\n\\[\n\\begin{aligned}\n\\frac{\\partial u}{\\partial t} & = & (a - u + u^2v ) +\n\\frac{\\partial^2 u}{\\partial x^2}, \\nonumber \\\\\n\\frac{\\partial v}{\\partial t} & = & (b - u^2v ) +\nd \\frac{\\partial^2 v}{\\partial x^2}, \\nonumber\n\\end{aligned}\n\\]\n\\[\n\\begin{aligned}\nn_{t} &=&-(nu_t)_x+rn(1-n),\\nonumber\\\\ \\label{eqn1}\nN u_{xx} + (\\tau n\\rho)_x&=&s\\rho u,\\nonumber \\\\\n\\rho_t+(\\rho u_t)_x&=&0,\\nonumber\n\\end{aligned}\n\\]\n\\[\nI(t)=\\left\\{\n\\begin{array}{ll}\nI_0(t), & 0\\leq t &lt; \\tau, \\\\\nI_0(t)+S(0)-S(t-\\tau), & \\tau \\leq t &lt; \\tau+\\sigma, \\\\\nS(t-\\tau-\\sigma)-S(t-\\tau), & \\tau+\\sigma \\leq t,\n\\end{array}\n\\right.\n\\]\n\\[\n  A  =  \\left[\n\\begin{array}{rrr}\n  0  &  5  &  -2   \\\\\n  5  & -7  &   5   \\\\\n-2  &  5  &   0\n\\end{array}\n\\right] .\n\\]\n\\[\nf(x)=\\left\\{\n\\begin{array}{ll} x^2 \\quad & x&lt;0 \\\\ \\sqrt{x+1} & x\\geq 0 \\end{array}\n\\right.\n\\]\n\n\n\\[\nx^2+4x+4=0.\n\\tag{4.2}\\]\nEquation Equation 4.2 is a quadratic.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Typesetting mathematics</span>"
    ]
  },
  {
    "objectID": "Presentations.html",
    "href": "Presentations.html",
    "title": "5  Presentations",
    "section": "",
    "text": "As part of your project you will give an approx. 10 minute presentation. You will have to develop some slides to present.\nQuarto has a number of different options for producing slide decks. Below we will use Revealjs.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Presentations</span>"
    ]
  },
  {
    "objectID": "Python.html",
    "href": "Python.html",
    "title": "6  Python code development",
    "section": "",
    "text": "6.1 Introduction\nIt is strongly encouraged that you use and develop programs over the course of your project. You should discuss programming with your project supervisor. In this section we will develop Python codes to solve a number of example problems.\nThe focus of the examples: - developing programming skills for problem solving - writing your own programmes - using existing packages\nIt is usually a very useful exercise to try to implement your own version of an algorithm. However, in many cases there already exist well developed codes that we of course should use!\nYou can use Python via Apps Anywhere (Open Anaconda and then use the SPyder IDE).\nAlternatively, you can run Python codes via your Quarto document. On the Uni machines Quarto has been connected to an installation of Python.\nTo run python via Quarto create a python environment",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Python code development</span>"
    ]
  },
  {
    "objectID": "Python.html#introduction",
    "href": "Python.html#introduction",
    "title": "6  Python code development",
    "section": "",
    "text": "Insert syntax for running python.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Python code development</span>"
    ]
  },
  {
    "objectID": "Python.html#some-key-ideas",
    "href": "Python.html#some-key-ideas",
    "title": "6  Python code development",
    "section": "6.2 Some key ideas",
    "text": "6.2 Some key ideas\n\n6.2.1 Calculator\n\n\n6.2.2 Variables and datatypes\nStrings Lists Tuples Sets Dictionaries\n\n\nCode\n# Define an integer\n\na=8\n\n# Define a floating point number\n\nb=16.25\n\n#\n\ns='Arsenal FC'\n\nprint(type(a))\nprint(type(b))\nprint(type(s))\n\nboolean_variable_1=True\nboolean_variable_2=False\n\nboolean_variable_and=boolean_variable_1*boolean_variable_2\n\nassert(boolean_variable_and==False)\n\n## addition\n\n## substraction\n\n# multiplication\n\n\n## exponential\n\n\n&lt;class 'int'&gt;\n&lt;class 'float'&gt;\n&lt;class 'str'&gt;\n\n\n\n\n6.2.3 Lists and dictionaries\n\n\nCode\nmy_list=[1,2,3,4,5]\n\nprint(my_list)\n\nprint('The second entry in the list is')\nprint(my_list[1])\n\n\n[1, 2, 3, 4, 5]\nThe second entry in the list is\n2\n\n\n\n\n6.2.4 Logical statements and control loops\n\n\n6.2.5 Writing functions\nA good rule of thumb is that if you find yourself using the same piece of code three or more times you should write a function. This avoids duplication of code.\nSuppose we find ourselves manually computing the sum of positive integers many times, i.e. \\[\ns_2=0+1+2=3\n\\] and \\[\ns_3=0+1+2+3=6.\n\\]\nIt makes sense to write a function that computes the sum for arbitrary \\(n\\). Then we call that function when needed.\n\n\nCode\n# Define a function\ndef sum_integers(n):\n  sum_int=0\n  for i in range(n):\n    sum_int=sum_int+i\n  return sum_int\n\n# The old way might eb to manually write out the sum\ns_1=0+1\ns_2=0+1+2\ns_3=0+1+2+3\n\n\n# instead we call a function \n\ns_function_3=sum_integers(3)\nprint(s_function_3)\n\ns_function_120=sum_integers(120)\nprint(s_function_120)\n\n\n3\n7140\n\n\n\n\n6.2.6 Code debugging\n\nsyntax errors\nruntime errors\nlogic errors\n\n\nsum=0.0\nfor i in range(5)\n  sum=sum+i\n\nfor i in range(5):\n  sum=sum+i\n\n6.2.6.1 \nPlan your code Keep code clean (e.g. use variables, write expressiosn that are easy to interpret) Test code often Comment code\n\n\n6.2.6.2 interpreting error messages\n\n\n6.2.6.3 print to screen\n\n\n6.2.6.4 check datatypes\n\n\n6.2.6.5 check syntax of function call\n\n\n6.2.6.6 Debugger",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Python code development</span>"
    ]
  },
  {
    "objectID": "Python.html#python-libraries",
    "href": "Python.html#python-libraries",
    "title": "6  Python code development",
    "section": "6.3 Python libraries",
    "text": "6.3 Python libraries\n\n6.3.1 Essential\n\n6.3.1.1 Matrix computation (numpy)\nNumpy is a widely used Python libary. It is a standard way to use arrays in Python. Numpy also contains lots of algorithm (e.g. linear algebra, calculus, mathematical functions, integration, random number generation etc.). You can find a beginner’s guide here.\nNumpy provides tools for calculating many mathematical operations.\n\n\nCode\nimport numpy as np\n\nx=3.14\ny=np.sin(x)\n\n\nprint('sin (3.14) is: ' )\nprint(y)\n\nassert(np.abs(y)&lt;0.1)\n\nz=np.pi\np=np.sin(z)\n\nassert(np.abs(p)&lt;0.00001)\n\nprint(p)\n\n\nsin (3.14) is: \n0.0015926529164868282\n1.2246467991473532e-16\n\n\nWe can also use numpy to define and manipulate arrays. In the example below we use python lists to define two 1D arrays.\n\n\nCode\nimport numpy as np\n\n# Define a numpy array\na = np.array([1, 2, 3, 4, 5, 6])\nb=np.array([7,8,9,10,11,12])\nprint(a)\n\nc=a+b\nprint('The sum of a and b is:')\nprint(c)\n\nprint(\"The first entry in a is\")\na[0]\n\n\n[1 2 3 4 5 6]\nThe sum of a and b is:\n[ 8 10 12 14 16 18]\nThe first entry in a is\n\n\n1\n\n\nWe can also use numpy for higher dimensional arrays\nCalculate the determinant of the 2x2 matrix \\[\nA=\\begin{pmatrix}\n4 & 3 \\\\\n2 & 1\n\\end{pmatrix}.\n\\]\n\n\nCode\nimport numpy as np\n\n# generate a two by two matrix of zeros\nA=np.zeros((2,2))\n\n# Set values as per questions\n\nA[0,0]=4\nA[0,1]=3\nA[1,0]=2\nA[1,1]=1\n\n# Print A out to check it is correct\nprint('The matrix is:')\nprint(A)\n\n# Compute the determinant\ndeterminant=np.linalg.det(A)\n\nprint('The determinant is:')\nprint(determinant)\n\n\n# Formally check that the answer is correct.\nassert(determinant==-2.0)\n\n\nThe matrix is:\n[[4. 3.]\n [2. 1.]]\nThe determinant is:\n-2.0\n\n\n\nCompute the trace of the matrix \\(A\\).\nCompute the determinant of the \\(3 \\times 3\\) matrix \\[\nB=\\begin{pmatrix}\n4 & 3& 2 \\\\\n2 & 1 & 4 \\\\\n3 & 2 & 1\n\\end{pmatrix}.\n\\]\nCompute the eigenvalues of \\(B\\).\n\n\n\n6.3.1.2 Plotting (matplotlib)\nMatplotlib is a pyton library for plotting.\nLet’s plot some well-known functions.\nSuppose we wish to plot the function \\[\nf(x)=x^2, \\ \\ x \\in[0,2].\n\\]\n\n\nCode\n#import python libraries\nimport matplotlib.pyplot as plt\nimport numpy as np\n# define x\nx=np.linspace(0,2,200)\n\n# Now define the funciton of x\n\nf=x**2\n\n# Now plot the function\n\n# Generate a figure ane an axis\nfig,ax=plt.subplots()\n\n# call the plot function to plot the data\nax.plot(x,f)\n\n# Set the x and y labels\nax.set_xlabel('$x$')\nax.set_ylabel('$f(x)$')\n\n\nText(0, 0.5, '$f(x)$')\n\n\n\n\n\n\n\n\n\nExercises:\n\nChange the domain to \\[x\\in[0,4]\\].\nPlot the function \\[f(x)=\\sin(x) \\].\nCreate two subplots.\nMake the font on the labels larger\nAdd a legend to the figures.\n\n\n\n6.3.1.3 Symbolic computation in Python (sympy)\n\n\n\n6.3.2 Python libraries of interest to particular projects\n\n\n6.3.3 Numerically solving differential equations (sci-py)\n\n6.3.3.1 ODEs\n\n\n6.3.3.2 PDEs\n\n\n\n6.3.4 Optimisation (skikit-learn)\n\n\n6.3.5 Data analysis (pandas)\n\n\n6.3.6 Machine learning (tensorflow)\n\n\n6.3.7 Image analysis (skikit-image)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Python code development</span>"
    ]
  },
  {
    "objectID": "Python.html#writing-your-own-scripts",
    "href": "Python.html#writing-your-own-scripts",
    "title": "6  Python code development",
    "section": "6.4 Writing your own scripts",
    "text": "6.4 Writing your own scripts\nAt some point (either over the course of your project or later) you will likely encounter a problem that cannot be solved using existing code libraries, i.e. you will need to write your own progammes. To prepare for this day, it is a good idea to practice your code development skills on problems where the solution are already known. Over the course of project assessment you will be asked about the methods that you have used in your project. It is much easier to defend the use of a method if you have a clear idea how to programme it; then the limitations of a method become much clearer. You can also include this code in appendix in your written report.",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Python code development</span>"
    ]
  },
  {
    "objectID": "index.html#assessment-components",
    "href": "index.html#assessment-components",
    "title": "MA40001",
    "section": "Assessment components",
    "text": "Assessment components\n\nPresentation\nInterim report\nPoster\nFinal report\nViva",
    "crumbs": [
      "Preface"
    ]
  }
]